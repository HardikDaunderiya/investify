// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: token.sql

package db

import (
	"context"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

const createToken = `-- name: CreateToken :one
INSERT INTO
    bk_tokens (
        token_value,
        token_user_id,
        token_expiry_date
    )
VALUES
    ($1, $2, $3) RETURNING token_id, token_value, token_user_id, token_expiry_date
`

type CreateTokenParams struct {
	TokenValue      uuid.UUID          `json:"token_value"`
	TokenUserID     int64              `json:"token_user_id"`
	TokenExpiryDate pgtype.Timestamptz `json:"token_expiry_date"`
}

func (q *Queries) CreateToken(ctx context.Context, arg CreateTokenParams) (BkToken, error) {
	row := q.db.QueryRow(ctx, createToken, arg.TokenValue, arg.TokenUserID, arg.TokenExpiryDate)
	var i BkToken
	err := row.Scan(
		&i.TokenID,
		&i.TokenValue,
		&i.TokenUserID,
		&i.TokenExpiryDate,
	)
	return i, err
}
